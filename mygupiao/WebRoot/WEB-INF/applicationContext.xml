<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"  
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx" 
  xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-2.5.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop.xsd 
   http://www.springframework.org/schema/tx 
   http://www.springframework.org/schema/tx/spring-tx-3.1.xsd" >
   
   
		
<!-- 数据源配置 
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <property name="driverClassName">
	    	<value>org.logicalcobwebs.proxool.ProxoolDriver</value> 
	    <value>javax.sql.PooledConnection</value> 
	    </property>
	    <property name="url">
	    	 <value>proxool.dbpool</value> 
	    <property name="url">	 
	    	<value>"java:comp/env/jdbc/ctais"</value>
	    </property>
    </bean>
     <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
    	<property name="jndiName" value="java:comp/env/jdbc/ctais" />    	  
    </bean>-->
	
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver">
		</property>
		<property name="url"
			value="jdbc:oracle:thin:@127.0.0.1:1521:ctais">
		</property>
		<property name="username" value="tempuser"></property>
		<property name="password" value="12345678"></property>
	</bean> 
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 映射文件 -->
			<property name="mappingResources">
			<list>
			<value>com/gupiao/model/persist/entity/OracleProreduces.hbm.xml</value>                
			</list>
			</property> 
		<property name="packagesToScan"><!-- 影射实体类 -->
			<list>
				<value>com.gupiao.model.persist.entity</value>						
				<value>com.example.share</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<!-- 指定Hibernate的连接方言 -->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.Oracle10gDialect
				</prop>
				<prop key="log4j.logger.net.sf.hibernate">debug</prop>
				
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<!-- 配置启动应用时，是否根据Hibernate映射自动创建数据表 
					<prop key="hibernate.hbm2ddl.auto">update</prop>-->
			</props>
		</property>
	</bean>
	<context:annotation-config />
    <context:component-scan base-package="com.gupiao.model.dao" />
    <context:component-scan base-package="com.gupiao.struts.action" />
	
	<!-- 事务管理 -->
		<bean id="txManager"
			class="org.springframework.orm.hibernate4.HibernateTransactionManager">
			<property name="sessionFactory" ref="sessionFactory"></property>
		</bean>
		<tx:annotation-driven transaction-manager="txManager" />
		<!-- 
		<tx:advice id="txAdvice" transaction-manager="txManager">
			<tx:attributes>
				<tx:method name="save*" propagation="REQUIRED"/>
				<tx:method name="delete*" propagation="REQUIRED"/>
				<tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED" />  		
			</tx:attributes>
		</tx:advice>
		
		<aop:config  proxy-target-class="true">
			<aop:pointcut id="allBiz"  expression="execution(* com.gupiao.test.*.*(..))" />
			<aop:advisor advice-ref="txAdvice" pointcut-ref="allBiz"/>
		</aop:config> 
	 -->
	<!-- 定义Spring JDBC模板类bean -->
	<bean id="simpleJdbcTemplate"
		class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
		<constructor-arg ref="dataSource" />	
	</bean>
	<!-- 
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">    
		<property name="sessionFactory" ref="sessionFactory"/>    
	</bean>
	
	<bean id="gupiaoAction" class="com.gupiao.struts.action.GupiaoAction">
		<property name="gupiaoDAO" ref="gupiaoDAO" />
	</bean>	 -->
	<!--
	 <bean id="jsonAction" class="com.gupiao.struts.action.JsonAction">
		<property name="gupiaoDAO" ref="gupiaoDAO" />
	</bean>	 
	  <bean id="gupiaoBo" class="com.gupiao.model.bo.impl.GupiaoBoImpl">
		<property name="gupiaoDAO" ref="gupiaoDAO"/>
	</bean>
	-->
	
	
	
	
	<!-- a pooling based JMS provider -->
	  <bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
	    <property name="connectionFactory">
	      <bean class="org.apache.activemq.ActiveMQConnectionFactory">
	        <property name="brokerURL">
	          <value>tcp://113.107.154.134:61616</value>
	        </property>	 	        
	      </bean>
	    </property>
	  </bean>
	 
	  <!-- Spring JMS Template -->
	  <bean id="myJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
	    <property name="connectionFactory">
	      <ref local="jmsFactory"/>
	    </property>
	    <property name="pubSubDomain" value="true" />  
	    <property name="explicitQosEnabled" value="true" /><!-- deliveryMode, priority, timeToLive 的开关，要生效，必须配置为true，默认false-->  
	    <property name="deliveryMode" value="2" /> <!-- 发送模式  DeliveryMode.NON_PERSISTENT=1:非持久 ; DeliveryMode.PERSISTENT=2:持久-->      
	  </bean>

	 <!--这个是队列目的地，点对点的-->
	    <bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
	        <constructor-arg>
	            <value>queue</value>
	        </constructor-arg>
	    </bean>
    <!--这个是主题目的地，一对多的-->
	    <bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
	        <constructor-arg value="de.eclipsemagazin.blackice.warnings"/>
	    </bean>
	




 <!-- 
    <bean id="messageReceiver" class="edu.sjtu.erplab.springactivemq.ProxyJMSConsumer">
       
        <property name="jmsTemplate" ref="jmsTemplate"></property>
    </bean>
    
	 -->
	
		
</beans>
