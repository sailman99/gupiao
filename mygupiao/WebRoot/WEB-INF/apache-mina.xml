<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd" default-lazy-init="false">

    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
    <property name="customEditors">
      <map>
        <entry key="java.net.SocketAddress">
          <bean class="org.apache.mina.integration.beans.InetSocketAddressEditor" />
        </entry>
      </map>
    </property>
	</bean>


   
    <bean id="myHandler" class="com.gupiao.socket.MyProtocolHandler">
    	<property name="gupiaoDAO" ref="gupiaoDAO" />
    </bean>
    <bean id="executorFilter" class="org.apache.mina.filter.executor.ExecutorFilter" />
 	<bean id="mdcInjectionFilter" class="org.apache.mina.filter.logging.MdcInjectionFilter">
  		<constructor-arg value="remoteAddress" />
 	</bean>
       
    <bean id="textLineCodec" class="org.apache.mina.filter.codec.ProtocolCodecFilter">
		 <constructor-arg>
		    <bean class="org.apache.mina.filter.codec.textline.TextLineCodecFactory" />
		 </constructor-arg>
	</bean>
	<bean id="object" class="org.apache.mina.filter.codec.ProtocolCodecFilter">
		 <constructor-arg>
		    <bean class="org.apache.mina.filter.codec.serialization.ObjectSerializationCodecFactory" />
		 </constructor-arg>
	</bean>
 
	  <bean id="loggingFilter" class="org.apache.mina.filter.logging.LoggingFilter" />
	
	<!-- The filter chain. -->
	
	<bean id="filterChainBuilder" class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder">
	  <property name="filters">
	    <map>
	      <entry key="executor" value-ref="executorFilter" />
	      <entry key="mdcInjectionFilter" value-ref="mdcInjectionFilter" />
	      <entry key="textLineCodec" value-ref="textLineCodec" />
	     <!--  <entry key="loggingFilter" value-ref="loggingFilter" />  -->
	    </map>
	  </property>
	</bean>


    
    <!--创建服务器-->
	 <bean id="sessionConfig" factory-bean="ioAcceptor"  factory-method="getSessionConfig" > 
        <property name="bothIdleTime" value="10"/> 
        <property name="receiveBufferSize" value="1024"/> 
        <property name="readBufferSize" value="1024" />
    </bean> 
	 
	 <bean id="ioAcceptor" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor" init-method="bind" destroy-method="unbind">
	    <property name="defaultLocalAddress" value=":21036" />
	    <property name="handler" ref="myHandler" />
	    <property name="reuseAddress" value="true" />
	    <property name="filterChainBuilder" ref="filterChainBuilder" />
  	</bean>

	<!-- 
	<bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
    	<property name="locateExistingServerIfPossible" value="true"/>
  	</bean>
    
	<bean id="exporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
		<property name="beans">
			<map>
				<entry key="bean:name=testBean1" value-ref="myHandler" />				
			</map>
		</property>
		<property name="assembler">
	      <bean class="org.springframework.jmx.export.assembler.MethodNameBasedMBeanInfoAssembler">
	        <property name="managedMethods" value="sessionOpened,broadcast,messageReceived,sessionOpened,sessionClosed"/>
	      </bean>
   		 </property>
		 <property name="server">
		     <ref local="mbeanServer"/>
		 </property>
		
	</bean> -->
 </beans>
